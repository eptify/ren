grammar ren ;
WS : [ \t\r\n]+ -> channel(HIDDEN) ;
COMMENT : ';' ~[\r\n]* -> skip ;
renlist : '[' value* ']' | '(' value* ')' ;
renmap : '#(' nameValuePair* ')' ;
nameValuePair : name value ;
name : word ':' SPACE ;
value : renlist | renmap | none | logic | name | word
    | anyNumber | anyString | anyDateTime 
    | anyBinary | rentuple | point ;
anyNumber : number | percent | money | nan | inf ;
anyString : string | impliedString ;
anyDateTime : dateTime | date | relDateTime | relDate | relTime ;
anyBinary : b16binary | b64binary ;
string : ('"' CHAR* '"') | multilineString | tag ;
MSCHAR : ~[{}^] ;
multilineString : '{' (MSCHAR* | multilineString) '}' ;
TAGCHAR : ~[<>^] ;
tag : '<' (TAGCHAR | tag)* '>' ;
CHAR : ~["^\n\r] ;
number : sign? INT frac? EXP? ;
percent : number '%' ;
money : sign? '$' INT frac? ;
nan : '1.#NaN' ;
inf : sign? '1.#INF' ;
none : 'none' ;
logic : 'true' | 'false' | 'on' | 'off' | 'yes' | 'no' ;
date : DIGIT DIGIT DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT ;
timeOfDay : DIGIT DIGIT ':' DIGIT DIGIT seconds? ;
seconds : ':' DIGIT DIGIT frac? ;
dateTimeSep : '/' | 'T' ;
timezone : sign? 'Z' | sign timeOfDay ;
dateTime : date dateTimeSep timeOfDay timezone? ;
relDate : sign? DIGIT DIGIT DIGIT DIGIT+ '-' INT '-' INT ;
relTime : sign? INT ':' INT relSeconds? ;
relSeconds : ':' DIGIT+ frac? ;
relDateTime : relDate dateTimeSep relTime ;
// relDateTime : sign? INT ':' INT ':' INT ':' relTime ;
word : WordFirstChar wordInnerChar* ;
WordFirstChar : ~[0-9{}"()/\\@#$%^,:;<>[\]'] ;
wordInnerChar : WordFirstChar | DIGIT ;
impliedString : ImplStrFirstChar implStrInnerChar* ;
ImplStrFirstChar : ~[0-9{}"()\\$^,;<>[\]] ;
implStrInnerChar :
    (wordInnerChar | '/' | '\\' | '@' | '#' | '$' | '%' | ',' | ':' | '\'')
    (ImplStrFirstChar | DIGIT | '\\' | '$' | ',') ;
rentuple : INT tuplePart tuplePart+ ;
tuplePart : '.' INT ;
point : number axis+ ;
axis : 'x' number ;
b16binary : '16'? '#{' (B16CHAR B16CHAR)* '}' ;
b64binary : '64#{' (B64CHAR B64CHAR B64CHAR B64CHAR)* '}' ;
sign : '-' ;
frac : '.' INT ;
INT : [0-9]+ ;
EXP : [eE] [+\-]? INT ;
B16CHAR : [0-9A-Za-z] ;
B64CHAR : [0-9A-Za-z+/=] ;
DIGIT : [0-9] ;
SPACE : [ \t\r\n]+ ;
